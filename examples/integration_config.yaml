# file with input model
input_file:
  format: fits
  filenames:
    - !env "{WORKING_DIR}/test.fits"
# file where output model would be written
output_file: !env "{WORKING_DIR}/test_out.fits"
# what to do if output file already exists
overwrite: True
# time until which model would be integrated
model_time: !q [1.e+4, Myr]
# interval between to consecutive snapshots to write to output file
snapshot_interval: 2

# Algorithm which would perform integration and its constructor arguments.
integrator:
  name: pyfalcon
  args:
    kmax: 7
    eps: !q [0.2, kpc]

# You can specify filename where JSON logs would be saved
logging:
  level: debug
  filename: !env "{WORKING_DIR}/test_json_log.txt"

# you can specify the list of tasks. For example, for logging
tasks:
  - name: ScatterTask
    args: &logging_args
      expressions: { x: x, y: y, z: z, vx: vx, vy: vy, vz: vz, m: m }
      units: 
        x: !q [1, kpc]
        y: !q [1, kpc]
        z: !q [1, kpc]
        vx: !q [1, kms]
        vy: !q [1, kms]
        vz: !q [1, kms]
        m: !q [1, MSun]
    actions_before:
      - type: slice
        id: 0
    actions_after:
      - type: logging
        print_last: true
        id: host_bh_params
  - name: ScatterTask
    args: *logging_args
    actions_before:
      - type: slice
        id: 1000001
    actions_after:
      - type: logging
        print_last: true
        id: sat_bh_params
