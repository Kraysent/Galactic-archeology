# output model would be written in this file
output_file: !env '{WORKING_DIR}/test.fits'
# what to do if output file already exists
overwrite: True

# You can specify list of logging handlers
logging:
  handlers:
    - handler_type: console
      args:
        format: '[%(levelname)s] %(asctime)s | %(message)s'
        stream: stdout
    - handler_type: file
      args: 
        format: '[%(levelname)s] %(asctime)s | %(message)s'
        filename: !env '{WORKING_DIR}/test_log.txt'
        datefmt: '%H:%M:%S'

# list of objects; they can be either read from csv files or given directly using masses and positions.
objects: 
  # host black hole
  - type: body
    # use !q tag and sequence of 2 elements to denote a quantity 
    mass: !q [4.e+8, MSun]
    position: !q [[0, 0, 0], kpc]
    velocity: !q [[0, 0, 0], kms]
  # host galaxy
  - type: csv
    delimeter: ' '
    path: !env '{DATA_DIR}/host.csv'
    position: !q [[0, 0, 0], kpc]
    velocity: !q [[0, 0, 0], kms]
  # satellite black hole
  - type: body
    mass: !q [1.e+8, MSun]
    position: !q [[20, 0, 0], kpc]
    velocity: !q [[0, 100, 0], kms]
  # satellite galaxy
  - type: csv
    delimeter: ' '
    path: !env '{DATA_DIR}/sat.csv'
    position: !q [[20, 0, 0], kpc]
    velocity: !q [[0, 100, 0], kms]
